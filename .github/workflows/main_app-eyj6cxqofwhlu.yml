# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - app-eyj6cxqofwhlu

on:
  push:
    branches:
      - main
      - feature/90-pipeline-automation
    paths:
      - "src/api/**"
      - "src/func/**"
      - "src/mcp/**"
      - ".github/workflows/**"
  workflow_dispatch:

  # Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      AZURE_APPSERVICEPLAN_NAME: ${{ vars.AZURE_APPSERVICEPLAN_NAME }}
      AZURE_APPSERVICEPLAN_RG: ${{ vars.AZURE_APPSERVICEPLAN_RG }}
      AZURE_COSMOSDB_NAME: ${{ vars.AZURE_COSMOSDB_NAME }}
      AZURE_COSMOSDB_RG: ${{ vars.AZURE_COSMOSDB_RG }}
      COSMOS_DB_DATABASE_NAME: ${{ vars.COSMOS_DB_DATABASE_NAME }}
      DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
      LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
      LINE_CHANNEL_SECRET: ${{ secrets.LINE_CHANNEL_SECRET }}
      NIJIVOICE_API_KEY: ${{ secrets.NIJIVOICE_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_COMPATIBLE_API_KEY: ${{ secrets.OPENAI_COMPATIBLE_API_KEY }}
      PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
      SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
      SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
      SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
      AZURE_AI_SEARCH_API_KEY: ${{ secrets.AZURE_AI_SEARCH_API_KEY }}
      AZURE_AI_SEARCH_SERVICE_NAME: ${{ vars.AZURE_AI_SEARCH_SERVICE_NAME }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.13"

      - name: Create requirements.txt from uv.lock
        run: |
          cd src/api
          uv export --format requirements-txt --no-editable > requirements.txt

      - name: create-json
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: "credentials.json"
          json: ${{ secrets.GOOGLE_CREDENTIALS }}
          dir: "src/api"

      - name: ls src/api
        run: |
          cd src/api
          ls -la

      - name: Install azd
        uses: Azure/setup-azd@v2

      - name: Log in with Azure (Federated Credentials)
        run: |
          azd auth login \
            --client-id "$AZURE_CLIENT_ID" \
            --federated-credential-provider "github" \
            --tenant-id "$AZURE_TENANT_ID"

      - name: Provision Infrastructure
        run: azd provision --no-prompt

      - name: Deploy Application
        run: |
          azd deploy mcp --no-prompt &
          azd deploy api --no-prompt &
          wait
